import pandas as pd
"""
upload csv file with list of hospitals and cities in florida
"""
hosp = pd.read_csv('hospital names - Sheet1.csv')
print(hosp)

"""
hospital is a function that reads the csv file, hosp_nm and looks for a match in the city column. If a match is found, it will output the corresponding hospital in a list called indlist. The list of hospitals in the city is returned at the end of the code
"""
def hospital(df,name: str):
    indlist = []
    for b in range(len(df)):
        if str(df['City'][b]) == name:
            indlist.append(df['Hospital Name'][b])
    if indlist == []:
      return []
    return indlist
"""
The following code is meant to output a map of the cities located in the csv file of hospital and show the average gross patient revenue for the city by a gradient.
"""

import geopy
from geopy.geocoders import Nominatim
geolocator = Nominatim(user_agent="MyApp")
a = 'Celebration'
location = geolocator.geocode( a + ", Fl")
print("The latitude of the location is: ", location.latitude)
print("The longitude of the location is: ", location.longitude)
cities = hosp['City']
def lat(df):
  lat = []
  for element in df:
    location = geolocator.geocode(element + ', Fl')
    lat.append(location.latitude)
  return lat

lat = lat(cities)

def longi(df):
  longi = []
  for element in df:
    location = geolocator.geocode(element + ', Fl')
    longi.append(location.longitude)
  return longi

longi = longi(cities)

hosp['Latitude'] = lat
hosp['Longitude'] = longi
print(hosp)

def avg_gpr(df,city):
  total = 0
  count = 0
  ind = 0
  for row in df['City']:
    if row == city:
      a = (df['Gross Patient Revenue'][ind]).replace(',','')
      total = total + int(float(a))
      count = count+1
    ind = ind + 1
  return total/count

avg_gpr(hosp,'Miami')

import folium

map = folium.Map(location=[28.54, -81.379], tiles="Stamen Terrain", zoom_start=7, control_scale=True)
map.save('Florida map')
print(hosp['Latitude'][0])
for a in range (len(hosp)):
  folium.vector_layers.Marker(location=[hosp['Latitude'][a],hosp['Longitude'][a]], tooltip=hosp['City'][a] + ': $' + str(avg_gpr(hosp,hosp['City'][a]))).add_to(map)
map

"""
The missing code is meant to create a histogram of the average number of hospital beds for the hospitals in the city
"""
def avg_sb(df,city):
  total = 0
  count = 0
  ind = 0
  for row in df['City']:
    if row == city:
      a = (df['Staffed Beds'][ind]).replace(',','')
      total = total + int(float(a))
      count = count+1
    ind = ind + 1
  return total/count

avg_sb(hosp,'Miami')

a = (hosp['City'].unique())
def v(df):
  list_v = []
  for city in a:
    v = avg_sb(df,city)
    list_v.append(v)
  return list_v

v = v(hosp)
print(v)

complete = dict(zip(a,v))
print(complete)
import matplotlib.pyplot as plt
names = a
values = v
plt.bar(range(len(a)), values, tick_label=names, color = 'pink')
plt.xticks(range(len(a)), a, rotation='vertical', fontsize = 3)
#ax.legend(loc='best', fontsize=25)
plt.show()

  #this portion of the code takes in user input, asking questions to determine the state of the users condition and responding with an output that includes the nearest hospitals based on the city they inputted using the hospital function defined previously.
#this portion of the code takes in user input, asking questions to determine the state of the users condition and responding with an output that includes the nearest hospitals based on the city they inputted using the hospital function defined previously.
name=input("What is your name?")
location=input("What city do you live in? (First letter of city should be capitalized)")
while hospital(hosp,location) == []:
  print('Sorry, there are no hospitals in that city. Try another city.')
  location = input('What city do you live in? (First letter of city should be capitalized)')
answer=input("have you taken a tuberculosis test? (answer should be 'yes' or 'no')")
if answer=="yes":
  answer2=input("was your test positive? (answer should be 'yes' or 'no')")
  if answer2=="yes":
    answer3=input("Have you been feeling fatigued or experiencing weight loss, fever, night sweats, or coughing up blood? (answer should be 'yes' or 'no')")
    if answer3=="yes":
      print("you have active tuberculosis. In order to treat this, you should take isoniazid INH in combination with three other drugs-rifampin, pyrazinamide and ethambutol.")
      print('This is/These are the hospitals where you can get treatment in your city:', hospital(hosp,location))
    else:
      print("you have Latent tuberculosis. In order to treat this, you should take Isoniazid and rifapentine. You can find this at ")
      print('This is/These are the hospitals where you can get treatment in your city:', hospital(hosp,location))
  else:
    answer4=input("have you taken the vaccine? (answer should be 'yes' or 'no')")
    if answer4=="yes":
      answer5=input("what year did you get the vaccine?")
      print(int(answer5)+15, "is the year that you need to be revaccinated")
      print('You can get vaccinated at these hospitals in your city:',hospital(hosp,location))
    else:
      print('You can get vaccinated at these hospitals in your city:',hospital(hosp,location))
else:
  print('you can get tested at these locations:', hospital(hosp,location))
